# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    help                                               :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jereligi <jereligi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/03/11 14:32:28 by jereligi          #+#    #+#              #
#    Updated: 2020/09/06 16:05:42 by jereligi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

brew cask install virtualbox
brew install kubectl
brew install minikube
mv ./minikube /goinfre/jereligi
cd /goinfre/jereligi
ln -s /goinfre/jereligi/.minikube /Users/jereligi/.minikube
mkdir /goinfre/jereligi/.minikube
minikube start --vm-driver=virtualbox --disk-size=5000MB
minikube dashboard
eval $(minikube docker-env)

curl --ftp-ssl --insecure --user ftps_user:password ftp://192.168.99.2:21


# Docker
- build image
docker build -t name_image path_Dockerfile

exemple : docker build -t alpine_nginx .

- Run image
docker run -it -p 80:80 alpine_nginx

exemple : docker run -it -p 21:21 -p 21000-21010:21000-21010 alpineftp

- ajouter des variables env dans docker
exemple : docker run -it -p 80:80 -e USER=jereligi alpine_nginx

- donner une ip a un container
exemple : docker run --network="bridge" -t alpine_wordpress .

- inspecter un container
docker inspect ID

- Kill container
docker kill IDcontaine

- RUN DOCKER SERVICES

- MYSQL
docker run -it -p 3306:3306 --network="bridge" -e PASSWORD=password1234 -e WP_DB_NAME=wordpress -e WP_USER=wp_user alpine_mysql
- Wordpress
docker run -it -p 5050:5050 --network="bridge" -e PASSWORD=password1234 -e WP_DB_NAME=wordpress -e WP_USER=wp_user -e MYSQL=172.17.0.2 alpine_wordpress
- PhpMyAdmin
docker run -it -p 5000:5000 alpine_phpmyadmin

docker ps
docker stop
docker image rm ID

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)

Kubernetes

kubectl ...
kubectl apply -f pod.yaml
kubectl create -f pod.yaml (lancer un pod/service/deployment)
kubectl exec -t -i name -- /bin/bash (shell interactif dans le container)
kubectl get deployment
kubectl get pods (list les pods)
kubectl describe pod/name (affiche tout les informations sur le pod)
kubectl get service
kubectl delete deployment name

minikube dashboard
minikube service <nom du service> --url

snapshot VM
